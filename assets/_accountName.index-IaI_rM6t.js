import{r as y,I as b,j as s,M as i,F as d,B as g,R as m,C as c,a as C,L as k,S as w,u as F,c as B}from"./index-Czi7hHVo.js";import{u as $,B as L,C as M,L as o,I as f,P,a as R,b as x,c as v}from"./use-characters-CN7GPebv.js";const t=({label:n,value:e})=>s.jsxs(d.Group,{as:m,className:"align-items-baseline",children:[s.jsx(d.Label,{column:!0,sm:5,children:n}),s.jsx(c,{children:s.jsx(d.Control,{size:"sm",readOnly:!0,value:e})})]}),I=({show:n,item:e,handleClose:a})=>{var h;const{goBack:j}=y.useContext(b),{items:r,pagination:N}=$({craftMaterial:e.code});return s.jsxs(i,{show:n,onHide:a,children:[s.jsxs(i.Header,{children:[s.jsx("img",{height:"25",className:"me-1",src:`https://artifactsmmo.com/images/items/${e.code}.png`,alt:e.code}),s.jsx("span",{className:"me-auto",children:e.name}),e.tradeable&&s.jsx(L,{className:"text-uppercase ms-auto",bg:"success",children:"Tradeable"})]}),s.jsxs(i.Body,{children:[e.description&&s.jsx("p",{children:e.description}),s.jsxs(d,{children:[s.jsx("h5",{className:"mt-3",children:"Information"}),s.jsx(t,{label:"Level",value:e.level}),s.jsx(t,{label:"Type",value:e.type}),e.subtype&&s.jsx(t,{label:"Subtype",value:e.subtype}),e.effects&&e.effects.length>0&&s.jsxs(s.Fragment,{children:[s.jsx("hr",{}),s.jsx("h5",{className:"mt-3",children:"Effects"}),(h=e.effects)==null?void 0:h.map(l=>s.jsx(t,{label:s.jsx(M,{code:l.code,imgProps:{height:20}}),value:l.value},l.code))]}),e.craft&&s.jsxs(s.Fragment,{children:[s.jsx("hr",{}),s.jsx("h5",{className:"mt-3",children:"Crafting"}),e.craft.quantity&&s.jsx(t,{label:"Quantity",value:e.craft.quantity}),e.craft.skill&&s.jsx(t,{label:"Skill",value:e.craft.skill}),e.craft.level&&s.jsx(t,{label:"Level",value:e.craft.level}),s.jsx("h6",{className:"mt-3",children:"Requirements"}),e.craft.items&&e.craft.items.length>0&&s.jsx(o,{children:e.craft.items.map(l=>s.jsxs(o.Item,{children:[s.jsx(f,{code:l.code,useHistory:!0}),s.jsxs("small",{className:"text-muted",children:[" x ",l.quantity]})]},l.code))})]}),!!(r!=null&&r.total)&&s.jsxs(s.Fragment,{children:[s.jsx("hr",{}),s.jsx("h5",{className:"mt-3",children:"Used in"}),s.jsx(o,{className:"mb-2",children:r.data.map(l=>{var u,p;return s.jsxs(o.Item,{className:"d-flex justify-content-between",children:[s.jsx(f,{code:l.code,useHistory:!0})," ",s.jsxs("small",{className:"text-muted",children:[(u=l.craft)==null?void 0:u.skill," @ lvl",(p=l.craft)==null?void 0:p.level]})]},l.code)})}),s.jsx("div",{className:"d-flex justify-content-center",children:s.jsx(P,{...N,size:"sm"})})]})]})]}),s.jsxs(i.Footer,{children:[j&&s.jsx(g,{variant:"outline-light",className:"ms-2",onClick:j,children:"Back"}),s.jsx(g,{onClick:a,variant:"outline-primary",children:"Close"})]})]})},S=({accountName:n})=>{const e=R(n);return s.jsx(C,{children:s.jsxs(m,{children:[s.jsx(c,{lg:2}),s.jsx(c,{lg:8,children:s.jsx(m,{className:"d-flex",children:e.map(a=>s.jsx(c,{lg:4,className:"p-2 d-flex justify-content-center align-items-center",children:s.jsx(x,{style:{maxWidth:200,width:"100%",margin:"auto"},children:s.jsxs(x.Body,{children:[s.jsx(k,{to:"/$accountName/$characterName/",params:{accountName:n,characterName:a.name},children:s.jsx(x.Img,{src:`https://artifactsmmo.com/images/characters/${a.skin}.png`,height:100,width:150,style:{maxWidth:80}})}),s.jsx(x.Title,{children:a.name}),s.jsxs(w,{gap:2,children:[s.jsx(v,{variant:"danger",max:a.max_hp,now:a.hp,label:`${a.hp}/${a.max_hp}`}),s.jsx(v,{variant:"success",max:a.max_xp,now:a.xp,label:`${a.xp}/${a.max_xp}`}),s.jsxs("dl",{children:[s.jsx("dt",{children:"Level"}),s.jsx("dd",{children:a.level})]})]})]})})},a.name))})}),s.jsx(c,{lg:2})]})})},q=({accountName:n})=>{const e=F();return s.jsxs(s.Fragment,{children:[e.show&&e.item&&s.jsx(I,{show:e.show,item:e.item,handleClose:e.handleClose}),s.jsx(S,{accountName:n})]})},E=B("/$accountName/")({}),T=()=>{const{accountName:n}=E.useParams();return s.jsx(q,{accountName:n})};export{E as Route,T as component};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
